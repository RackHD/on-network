# Copyright 2017, Dell EMC, Inc.

swagger: "2.0"
info:
  title: on-network api
  version: "0.0.1"
consumes:
- application/json

definitions:
  ErrorResponse:
    properties:
      message:
        type: string
      errors:
        items:
          type: string
        type: array
    required:
    - message
  About:
    properties:
      name:
        type: string
    required:
    - name
  FirmwareImage:
    type: object
    required:
    - imageType
    - imageURL
    properties:
      imageType:
        type: string
        enum: ["kickstart", "system" ]
      imageURL:
        type: string
  UpdateSwitch:
    type: object
    required:
    - endpoint
    - firmwareImages
    - switchModel
    properties:
      endpoint:
        $ref: "#/definitions/SwitchEndpoint"
      firmwareImages:
        type: array
        items:
          $ref: "#/definitions/FirmwareImage"
        minItems: 1
      switchModel:
        type: string
  SwitchEndpoint:
    type: object
    required:
    - ip
    - username
    - password
    - switchType
    properties:
      ip:
        type: string
      username:
        type: string
      password:
        type: string
      switchType:
        type: string
  Switch:
      type: object
      required:
      - endpoint
      properties:
        endpoint:
          $ref: "#/definitions/SwitchEndpoint"
  Login:
    type: object
    properties:
     username:
      type: string
     password:
      type: string
  Token:
    type: object
    properties:
     token:
      type: string
  LoginError:
    type: object
    properties:
     message:
      type: string
     error:
      type: string
  SwitchConfigResponse:
    type: object
    properties:
      config:
        type: string
  SwitchVersionResponse:
    type: object
    properties:
      version:
        type: string
  Status:
    type: object
    properties:
     message:
      type: string


schemes:
 - http
produces:
 - application/json
securityDefinitions:
 Bearer:
  description: |
    For accessing the API a valid JWT token must be passed in all the queries in
    the 'Authorization' header.


    A valid JWT token is generated by the API and retourned as answer of a call
    to the route /login giving a valid user & password.


    The following syntax must be used in the 'Authorization' header :

    Bearer xxxxxx.yyyyyyy.zzzzzz
  type: apiKey
  in: header
  name: authorization


paths:
  /login:
    post:
      tags:
      - auth
      description: |
        Allow users to log in, and to receive a Token
      parameters:
      - in: body
        name: body
        description: The username/password
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: Login Success
          schema:
            $ref: '#/definitions/Token'
        401:
          description: Whether the user is not found or error while login
          schema:
            $ref: '#/definitions/LoginError'
  /about:
    get:
      description: Information about on-network
      security:
        - Bearer: []
      operationId: aboutGet
      responses:
        200:
          description: Successfully retrieved about
          schema:
            $ref: '#/definitions/About'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get about
      tags:
        - /about

  /updateSwitch:
    post:
      description: Update switch firmware based on specified switch type and firmware image
      security:
          - Bearer: []
      operationId: updateSwitch
      parameters:
      - name: body
        in: body
        schema:
          $ref: "#/definitions/UpdateSwitch"
      responses:
        201:
          description: Successfully issued update switch firmware
          schema:
            $ref: '#/definitions/Status'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update switch firmware
      tags:
      - /updateSwitch

  /switchConfig:
    post:
      description: Get switch running config
      security:
        - Bearer: []
      operationId: switchConfig
      parameters:
      - name: body
        in: body
        schema:
          $ref: "#/definitions/Switch"
      responses:
        200:
          description: Successfully returned switch running config
          schema:
            $ref: '#/definitions/SwitchConfigResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get switch running config
      tags:
      - /switchConfig

  /switchFirmware:
     post:
       description: Get switch Firmware Version
       security:
             - Bearer: []
       operationId: switchFirmware
       parameters:
       - name: body
         in: body
         schema:
           $ref: "#/definitions/Switch"
       responses:
         200:
           description: Successfully returned switch firmware version
           schema:
            $ref: '#/definitions/SwitchVersionResponse'
         default:
           description: Error
           schema:
             $ref: '#/definitions/ErrorResponse'
       summary: Get switch Firmware Version
       tags:
       - /switchFirmware

  /switchVersion:
     post:
       description: Get switch Version
       security:
             - Bearer: []
       operationId: switchVersion
       parameters:
       - name: body
         in: body
         schema:
           $ref: "#/definitions/Switch"
       responses:
         200:
           description: Successfully returned switch firmware version
         default:
           description: Error
           schema:
             $ref: '#/definitions/ErrorResponse'
       summary: Get switch Firmware Version
       tags:
       - /switchVersion